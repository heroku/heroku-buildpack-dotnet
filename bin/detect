#!/usr/bin/env bash
# Usage: bin/detect <build-dir>
# See: https://devcenter.heroku.com/articles/buildpack-api

set -euo pipefail

BUILD_DIR="${1}"

# The absolute path to the root of the buildpack.
BUILDPACK_DIR=$(cd "$(dirname "$(dirname "${BASH_SOURCE[0]}")")" && pwd)

source "${BUILDPACK_DIR}/lib/output.sh"

# Function to parse TOML project.toml using Python
parse_project_toml() {
	local toml_file="$1"

	# Use Python parser (works on both heroku-22 with tomli and heroku-24 with tomllib)
	local python_result
	if python_result=$(python3 "${BUILDPACK_DIR}/lib/extract_solution_file.py" "${toml_file}" 2>/dev/null); then
		if [[ -n "${python_result}" ]]; then
			echo "${python_result}"
			return 0
		fi
	fi

	return 1
}

# Check for project.toml configuration first
PROJECT_TOML="${BUILD_DIR}/project.toml"
if [[ -f "${PROJECT_TOML}" ]]; then
	# shellcheck disable=SC2310 # This function is invoked in an 'if' condition so set -e will be disabled.
	if parse_project_toml "${PROJECT_TOML}" >/dev/null; then
		echo ".NET"
		exit 0
	fi
fi

# Detect .NET project or solution files
if find "${BUILD_DIR}" -maxdepth 1 -name "*.sln" -o -name "*.csproj" -o -name "*.fsproj" -o -name "*.vbproj" | grep -q .; then
	echo ".NET"
	exit 0
fi

output::error <<EOF
Error: No .NET solution or project files (such as \`foo.sln\` or \`foo.csproj\`) found.

For more information, see:
https://devcenter.heroku.com/articles/dotnet-behavior-in-heroku#auto-detection
EOF
exit 1
