#!/usr/bin/env bash
# Usage: bin/detect <build-dir>
# See: https://devcenter.heroku.com/articles/buildpack-api

set -euo pipefail

BUILD_DIR="${1}"

# The absolute path to the root of the buildpack.
BUILDPACK_DIR=$(cd "$(dirname "$(dirname "${BASH_SOURCE[0]}")")" && pwd)

source "${BUILDPACK_DIR}/lib/output.sh"

has_dotnet_solution_config() {
	local toml_file="$1"

	# Fail fast if the file doesn't exist.
	[[ -f "${toml_file}" ]] || return 1

	# Use Python to parse the TOML file.
	# The script will exit with 0 (success) only if the entire key path exists.
	# Any error (KeyError, file corruption, etc.) will cause a non-zero exit code.
	python3 -c "
import sys
try:
    # Use standard library tomllib if available (Python 3.11+)
    import tomllib
except ImportError:
    # Fall back to the tomli package
    import tomli as tomllib

with open(sys.argv[1], 'rb') as f:
    config = tomllib.load(f)

# This line will raise a KeyError if any key in the path is missing.
_ = config['com']['heroku']['buildpacks']['dotnet']['solution_file']
" "${toml_file}" 2>/dev/null
}

# shellcheck disable=SC2310 # This function is invoked in an 'if' condition so set -e will be disabled.
if has_dotnet_solution_config "${BUILD_DIR}/project.toml"; then
	echo ".NET"
	exit 0
fi

# Detect .NET project or solution files
if find "${BUILD_DIR}" -maxdepth 1 -name "*.sln" -o -name "*.csproj" -o -name "*.fsproj" -o -name "*.vbproj" | grep -q .; then
	echo ".NET"
	exit 0
fi

output::error <<EOF
Error: No .NET solution or project files (such as \`foo.sln\` or \`foo.csproj\`) found.

For more information, see:
https://devcenter.heroku.com/articles/dotnet-behavior-in-heroku#auto-detection
EOF
exit 1
