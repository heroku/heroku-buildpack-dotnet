#!/usr/bin/env bash
# Usage: bin/detect <build-dir>
# See: https://devcenter.heroku.com/articles/buildpack-api

set -euo pipefail

BUILD_DIR="${1}"

# The absolute path to the root of the buildpack.
BUILDPACK_DIR=$(cd "$(dirname "$(dirname "${BASH_SOURCE[0]}")")" && pwd)

source "${BUILDPACK_DIR}/lib/output.sh"

has_dotnet_solution_config() {
	local toml_file="$1"

	# Fail fast if the file doesn't exist.
	[[ -f "${toml_file}" ]] || return 1

	# Use Python to parse the TOML file.
	# The script will exit with 0 (success) only if the entire key path exists.
	# Any error (KeyError, file corruption, etc.) will cause a non-zero exit code.
	# Uses tomllib/tomli fallback strategy for cross-stack compatibility:
	# - heroku-24 (Python 3.11+): uses built-in tomllib
	# - heroku-22 (Python 3.10): uses installed tomli package with identical API
	python3 -c "
import sys
try:
    # Use standard library tomllib if available (Python 3.11+)
    import tomllib
except ImportError:
    # Fall back to the tomli package
    import tomli as tomllib

with open(sys.argv[1], 'rb') as f:
    config = tomllib.load(f)

# This line will raise a KeyError if any key in the path is missing.
_ = config['com']['heroku']['buildpacks']['dotnet']['solution_file']
" "${toml_file}" 2>/dev/null
}

# shellcheck disable=SC2310 # This function is invoked in an 'if' condition so set -e will be disabled.
if has_dotnet_solution_config "${BUILD_DIR}/project.toml"; then
	echo ".NET"
	exit 0
fi

# Detect .NET project or solution files
if find "${BUILD_DIR}" -maxdepth 1 -name "*.sln" -o -name "*.csproj" -o -name "*.fsproj" -o -name "*.vbproj" | grep -q .; then
	echo ".NET"
	exit 0
fi

output::error <<EOF
Error: Your app is configured to use the .NET buildpack,
but we couldn't find a supported .NET project or solution file.

A .NET app on Heroku must have either:
- A .NET solution ('.sln') or project ('.csproj', '.vbproj', '.fsproj')
  file in the root directory of its source code.
- A 'project.toml' file that specifies the path to the solution file,
  for example:

    [com.heroku.buildpacks.dotnet]
    solution_file = "path/to/your/app.sln"

Currently the root directory of your app contains:

$(ls -1A --indicator-style=slash "${BUILD_DIR}" || true)

If your app already has a solution or project file, check that it:

1. Is in the top-level directory (not a subdirectory).
2. Isn't listed in '.gitignore' or '.slugignore'.
3. Has been added to the Git repository and committed.
4. If using 'project.toml', check that the 'solution_file' path is
   correct, points to an existing file, and that the filename's
   casing matches exactly.

Otherwise, add a .NET solution or project file to your app's root directory,
or configure the path to it in 'project.toml'.

For more information, see:
https://devcenter.heroku.com/articles/dotnet-behavior-in-heroku
EOF

exit 1
